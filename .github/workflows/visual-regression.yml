# .github/workflows/visual-regression.yml
name: Visual Regression Tests

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      update_golden:
        description: 'Update golden images'
        required: false
        type: boolean
        default: false

jobs:
  visual-regression:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
        device: [desktop, mobile]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: '3.11'

      - name: Install Pipenv
        run: |
          pip install pipenv
          pipenv --version

      - name: Cache Pipenv dependencies
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv-

      - name: Install dependencies
        run: |
          pipenv install --dev
          pipenv run playwright install --with-deps ${{ matrix.browser }}
      - name: Start app for screenshots
        run: |
          pipenv run invoke update-docs
          pipenv run invoke site
          pipenv run invoke post-process

          pipenv run invoke serve

          sleep 5
      - name: Restore golden images from cache
        id: cache-golden
        if: github.event.inputs.update_golden != 'true'
        uses: actions/cache/restore@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: golden/
          key: golden-images-${{ matrix.browser }}-${{ matrix.device }}-${{ hashFiles('src/**', 'update.py') }}
          restore-keys: |
            golden-images-${{ matrix.browser }}-${{ matrix.device }}-

      - name: Handle missing golden images
        if: github.event.inputs.update_golden != 'true' && steps.cache-golden.outputs.cache-hit != 'true'
        id: handle-missing
        run: |
          echo "No golden images found in cache for ${{ matrix.browser }}/${{ matrix.device }}"
          echo "This is expected on first run or after cache expiration."
          echo ""
          echo "Generating golden images now..."
          echo "cache_miss=true" >> $GITHUB_OUTPUT

      - name: Generate golden images on cache miss
        if: steps.handle-missing.outputs.cache_miss == 'true'
        run: |
          pipenv run python update.py --update-golden \
            --browsers ${{ matrix.browser }} \
            --devices ${{ matrix.device }} \
            --wait 1000 \
            --clean \
            --verbose

          echo "✅ Golden images generated successfully"
          ls -lah golden/

      - name: Update golden images (manual trigger)
        if: github.event.inputs.update_golden == 'true'
        run: |
          pipenv run python update.py --update-golden \
            --browsers ${{ matrix.browser }} \
            --devices ${{ matrix.device }} \
            --wait 1000 \
            --clean \
            --verbose

      - name: Run visual regression tests
        if: github.event.inputs.update_golden != 'true' && steps.handle-missing.outputs.cache_miss != 'true'
        run: |
          pipenv run pytest tests/regression.py -v \
            --browser=${{ matrix.browser }} \
            --device=${{ matrix.device }} \
            --tb=short
        continue-on-error: true
        id: tests

      - name: Upload current screenshots
        if: always() && steps.tests.conclusion != 'skipped'
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: current-${{ matrix.browser }}-${{ matrix.device }}-${{ github.run_number }}
          path: current/
          retention-days: 7

      - name: Upload diff images
        if: failure() && steps.tests.outcome == 'failure'
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: diff-${{ matrix.browser }}-${{ matrix.device }}-${{ github.run_number }}
          path: diff/
          retention-days: 14

      - name: Save golden images to cache
        if: github.event.inputs.update_golden == 'true' || steps.handle-missing.outputs.cache_miss == 'true'
        uses: actions/cache/save@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: golden/
          key: golden-images-${{ matrix.browser }}-${{ matrix.device }}-${{ hashFiles('src/**', 'update.py') }}

      - name: Upload golden images as backup
        if: github.event.inputs.update_golden == 'true' || steps.handle-missing.outputs.cache_miss == 'true'
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: golden-backup-${{ matrix.browser }}-${{ matrix.device }}
          path: golden/
          retention-days: 90

      - name: Comment PR with results
        if: github.event_name == 'pull_request' && failure() && steps.tests.outcome == 'failure'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const browser = '${{ matrix.browser }}';
            const device = '${{ matrix.device }}';
            const runNumber = '${{ github.run_number }}';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Visual Regression Failed

              **Browser:** ${browser}
              **Device:** ${device}

              Visual differences detected! Check the artifacts:
              - [Diff Images](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
              - Artifact: \`diff-${browser}-${device}-${runNumber}\`

              Review the changes and update golden images if intentional.`
            });

      - name: Comment on cache miss (first run)
        if: github.event_name == 'pull_request' && steps.handle-missing.outputs.cache_miss == 'true'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const browser = '${{ matrix.browser }}';
            const device = '${{ matrix.device }}';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ℹGolden Images Generated

              **Browser:** ${browser}
              **Device:** ${device}

              No cached golden images were found (first run or cache expired).

              New golden images have been generated and cached automatically.
              Future runs will use these as the baseline for comparison.

              This is expected behavior and not an error.`
            });

      - name: Fail job if tests failed
        if: steps.tests.outcome == 'failure'
        run: exit 1

  report:
    needs: visual-regression
    if: always()
    runs-on: ubuntu-latest

    steps:
      - name: Create summary report
        run: |
          echo "# Visual Regression Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Run ID:** ${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ needs.visual-regression.result }}" == "success" ]; then
            echo "All visual regression tests passed!" >> $GITHUB_STEP_SUMMARY
          else
            echo "Some visual regression tests failed. Check artifacts for diff images." >> $GITHUB_STEP_SUMMARY
          fi