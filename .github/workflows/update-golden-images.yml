name: Update Golden Images

on:
  push:
    branches:
      - main

jobs:
  update-golden:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache Pipenv dependencies
        uses: actions/cache@v4
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv-

      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv install --dev
          npm install --silent --no-fund --no-audit
          pipenv run playwright install && pipenv run playwright install-deps

      - name: Start app for screenshots
        run: |
          pipenv run invoke site
          pipenv run invoke post-process
          nohup pipenv run invoke serve &
          sleep 5

      - name: Generate golden images
        run: |
          ARGS="--update-golden"
          pipenv run python update.py $ARGS
          echo "Golden images generated for chromium (all devices, all pages)"
          ls -lah tests/golden/

      - name: Save golden images to cache
        id: save-cache
        uses: actions/cache/save@v4
        with:
          path: tests/golden/
          key: golden-images-main-${{ github.sha }}

      - name: Check cache save result
        if: failure()
        run: |
          echo "Cache save failed!"
          exit 1

      - name: Upload golden images as backup artifact
        uses: actions/upload-artifact@v4
        with:
          name: golden-backup-${{ github.run_number }}
          path: tests/golden/
          retention-days: 90

  summary:
    needs: update-golden
    if: always()
    runs-on: ubuntu-latest

    steps:
      - name: Create update summary
        run: |
          echo "# Golden Images Update Complete" >> $GITHUB_STEP_SUMMARY
          echo "**Triggered by:** @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "New golden images have been generated, cached, and backup artifacts uploaded (90-day retention)." >> $GITHUB_STEP_SUMMARY
          echo "Next visual regression test run will use these images as baseline."
