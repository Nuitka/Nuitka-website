# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Kay Hayen and Nuitka Contributors
# This file is distributed under the same license as the Nuitka the Python
# Compiler package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Nuitka the Python Compiler \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-11 23:48+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../doc/doc/commercial/protect-constants-data.rst:5
msgid "Protect Program Constants Data"
msgstr ""

#: ../../doc/doc/commercial/protect-constants-data.rst:7
msgid ""
"Consider this example information, to learn what this about. Only Nuitka "
"commercial offers the full protection, and this illustrates the issue "
"with standard Python the best."
msgstr ""

#: ../../doc/doc/commercial/protect-constants-data.rst:17
msgid ""
"Key is contained in the source code (separate file is dealt with in "
"another part), and literally unprotected due to that. Lets turn it to "
"bytecode:"
msgstr ""

#: ../../doc/doc/commercial/protect-constants-data.rst:37
msgid ""
"So not only are all program identified, argument names, also the string "
"value that is our secret contained in the ``.pyc`` file. There are better"
" ways to decode a bytecode file, that will give the data in clear form as"
" a Python object, but at this point it should be clear, the bytecode "
"object offers no protection for your data there. Nuitka Commercial to the"
" rescue."
msgstr ""

#: ../../doc/doc/commercial/protect-constants-data.rst:51
msgid ""
"For Nuitka commercial, the output is empty. Without that plugin, the "
"string will be found. The plugin is part of the Nuitka Commercial "
"subscription and unique in this level of protection."
msgstr ""

#: ../../doc/doc/commercial/protect-constants-data.rst:54
msgid ""
"Go `back to Nuitka commercial </doc/commercial.html#protection-vs-"
"reverse-engineering>`__ overview to learn about more features or to "
"subscribe to `Nuitka commercial </doc/commercial.html#pricing>`__."
msgstr ""

