# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Kay Hayen and Nuitka Contributors
# This file is distributed under the same license as the Nuitka the Python
# Compiler package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Nuitka the Python Compiler \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-11 23:48+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../doc/doc/commercial/protect-data-files.rst:5
msgid "Protect Program Constants Data"
msgstr ""

#: ../../doc/doc/commercial/protect-data-files.rst:7
msgid ""
"Your program might be using Qt and QML, or data files loaded. With Nuitka"
" Commercial, you can product (even before onefile) an executable that "
"contains them and then also covers it under the regular `constants data "
"protection <protect-constants-data.html>`__ automatically."
msgstr ""

#: ../../doc/doc/commercial/protect-data-files.rst:12
msgid ""
"Your program uses standard Python mechanisms from ``pkgutil``, "
"``pkg_resources``, ``importlib.resources`` or ``importlib_resources`` and"
" generally similar packages, and these load the data as a file or a "
"stream from within the binary without ever hitting the disk."
msgstr ""

#: ../../doc/doc/commercial/protect-data-files.rst:17
msgid ""
"All of this is happening with the same code base, i.e. you are not making"
" any modification (if at all), that is incompatible with Python. Your "
"code will still run directly. One thing you do have to change though is "
"to not use ``open`` with paths created from ``__file__``, but the above "
"code is more elegant anyway, as it does this for you in the normal case, "
"but can easily be hooked by Nuitka."
msgstr ""

#: ../../doc/doc/commercial/protect-data-files.rst:23
msgid "This means, e.g. rather than this program"
msgstr ""

#: ../../doc/doc/commercial/protect-data-files.rst:36
msgid "you get a file layout just simply like this"
msgstr ""

#: ../../doc/doc/commercial/protect-data-files.rst:42
msgid ""
"Due to constant data protection, the contents of the files will be "
"inaccessible to anything but the program, and this is very much what "
"people want."
msgstr ""

#: ../../doc/doc/commercial/protect-data-files.rst:45
msgid ""
"In standard Nuitka, you end up with something like this. And note, that "
"onefile mode is merely a self extracting archive, i.e. these files will "
"be on the customer disk for inspection:"
msgstr ""

#: ../../doc/doc/commercial/protect-data-files.rst:62
msgid ""
"For extension modules and DLLs used, this doesn't affect things. This is "
"about merely about data files. This is where onefile comes in and hides "
"these from the view and need for deployment, but it cannot replace Nuitka"
" commercial and its inclusion of data files inside the main binary."
msgstr ""

#: ../../doc/doc/commercial/protect-data-files.rst:67
msgid ""
"Go `back to Nuitka commercial </doc/commercial.html#protection-vs-"
"reverse-engineering>`__ overview to learn about more features or to "
"subscribe to `Nuitka commercial </doc/commercial.html#pricing>`__."
msgstr ""

